phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
# Python with sklearn
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
## Fit the model (read the documentation for the meaning of various terms!)
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
## Regression coefficients
print("Intercept", clf.intercept_[0])
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
## The predicted probabilities of y=1 on the test data
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
spam_train
# Python with sklearn
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
## Fit the model (read the documentation for the meaning of various terms!)
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
## Regression coefficients
print("Intercept", clf.intercept_[0])
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
## The predicted probabilities of y=1 on the test data
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
print("Spam test coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
print("")
print("Spam test coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("")
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
print("")
print("Spam test coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("")
print("Spam train coefficients:")
for c, v in zip(spam_train.columns[:5], clf.coef_[0]):
print(c, v)
print("")
print("Spam test coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="sag")
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=5000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=1000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Spam train coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
sum = 0
for i in phat:
sum += i/len(phat)
sum
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
acc = 0
for i in phat:
acc += i/len(phat)
print("Accuracy:", acc)
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
acc = 0
for i in phat_test:
acc += i/len(phat_test)
print("Accuracy test:", acc)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
acc = 0
for i in phat_train:
acc += i/len(phat_train)
print("Accuracy train:", acc)
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
acc_test = 0
for i in phat_test:
acc_test += i/len(phat_test)
print("Accuracy test:", acc_test)
acc_train = 0
for i in phat_train:
acc_train += i/len(phat_train)
print("Accuracy train:", acc_train)
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
acc_test = 0
for i in phat_test:
acc_test += i/len(phat_test)
print("Accuracy test:", acc_test)
acc_train = 0
for i in phat_train:
acc_train += i/len(phat_train)
print("Accuracy train:", acc_train)
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
acc_test = 0
for i in phat_test:
acc_test += i
acc_test/len(phat_test)
print("Accuracy test:", acc_test)
acc_train = 0
for i in phat_train:
acc_train += i
acc_test/len(phat_train)
print("Accuracy train:", acc_train)
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
acc_test = 0
for i in phat_test:
acc_test += i
acc_test/len(phat_test)
print("Accuracy test:", acc_test)
acc_train = 0
for i in phat_train:
acc_train += i
acc_train/len(phat_train)
print("Accuracy train:", acc_train)
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
acc_test = 0
for i in phat_test:
acc_test += i
print("Accuracy test:", acc_test/len(phat_test))
acc_train = 0
for i in phat_train:
acc_train += i
print("Accuracy train:", acc_train/len(phat_train))
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
acc_test = 0
for i in phat_test:
acc_test += i
print("Accuracy test:", acc_test/len(phat_test))
phat_train.sum()
print("Accuracy train:", acc_train/len(phat_train))
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
print("Accuracy test:", phat_test.sum()/len(phat_test))
print("Accuracy train:", phat_train.sum()/len(phat_train))
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
print("Accuracy train:", phat_train.sum()/len(phat_train))
print("Accuracy test:", phat_test.sum()/len(phat_test))
per_train = 1
for i in phat_train:
per_train = per_train*((1/i)**i)
print("Perplexity train:", per_train**(len(phat_train)))
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
print("Accuracy train:", phat_train.sum()/len(phat_train))
print("Accuracy test:", phat_test.sum()/len(phat_test))
phat_train
per_train = 1
for i in phat_train:
per_train = per_train*((1/i)**i)
print("Perplexity train:", per_train**(len(phat_train)))
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
print("Accuracy train:", phat_train.sum()/len(phat_train))
print("Accuracy test:", phat_test.sum()/len(phat_test))
phat_train
per_train = 1
for i in phat_train:
per_train = per_train*((1/i)**i)
print(per_train)
print("Perplexity train:", per_train**(len(phat_train)))
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
print("Accuracy train:", phat_train.sum()/len(phat_train))
print("Accuracy test:", phat_test.sum()/len(phat_test))
phat_train
per_train = 1
for i in phat_train:
per_train = per_train*(i**(len(phat_train)))
print(per_train)
print("Perplexity train:", per_train**(len(phat_train)))
import math
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
print("Accuracy train:", phat_train.sum()/len(phat_train))
print("Accuracy test:", phat_test.sum()/len(phat_test))
phat_train
per_train = 0
for i in phat_train:
per_train += math.log(i)
print("Perplexity train:", per_train)
import math
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
print("Accuracy train:", phat_train.sum()/len(phat_train))
print("Accuracy test:", phat_test.sum()/len(phat_test))
phat_train
per_train = 0
for i in phat_train:
per_train += math.log(i)
print("Perplexity train:", -per_train)
import math
import pandas as pd
from sklearn import linear_model
spam_train = pd.read_csv("spam_train.csv")
spam_test = pd.read_csv("spam_test.csv")
clf = linear_model.LogisticRegression(penalty="l1", C=1/0.001, solver="saga", max_iter=2000)
clf.fit(spam_train.iloc[:,:5],spam_train.iloc[:,5])
print("Intercept", clf.intercept_[0])
print("Coefficients:")
for c, v in zip(spam_test.columns[:5], clf.coef_[0]):
print(c, v)
phat_train = clf.predict_proba(spam_train.iloc[:,:5])[:,1]
phat_test = clf.predict_proba(spam_test.iloc[:,:5])[:,1]
print("Accuracy train:", phat_train.sum()/len(phat_train))
print("Accuracy test:", phat_test.sum()/len(phat_test))
per_train = 0
for i in phat_train:
per_train += math.log(i)
print("Perplexity train:", -per_train)
per_test = 0
for i in phat_test:
per_test += math.log(i)
print("Perplexity test:", -per_test)
