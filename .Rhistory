(2,4,6)+8
(2 4 6)+8
(2, 4, 6) + 8
a <- c(2, 4, 6)
a
a+8
c(2, 4, 6) + 8
a <- matrix(c(3, -1, 4, 1, 0, 2), nrow=2, ncol=3, byrow=TRUE)
a
b <- matrix(c(-1, -1, 1, 2, -1, 5), nrow=3, ncol=2, byrow=TRUE)
b
a%*%b
load("~/.RData")
a <- matrix(c(3, -1, 4, 1, 0, 2), nrow=2, ncol=3, byrow=TRUE)
a
b <- matrix(c(-1, -1, 1, 2, -1, 5), nrow=3, ncol=2, byrow=TRUE)
b
a%*%b
c <- a%*%b
eigen(c)
solve(c)
eigen(c)
a <- matrix(c(2, 0, 2, 0, 1, 1, 1, 1, 1, -1, 1, -1), nrow=3, ncol=4, byrow=TRUE)
a
qr(a)
x <- a
x
qr(x, ...)
## Default S3 method:
qr(x, tol = 1e-07 , LAPACK = FALSE, ...)
qr.coef(qr, y)
qr.qy(qr, y)
qr.qty(qr, y)
qr.resid(qr, y)
qr.fitted(qr, y, k = qr$rank)
qr.solve(a, b, tol = 1e-7)
## S3 method for class 'qr'
solve(a, b, ...)
is.qr(x)
as.qr(x)
clr
clear
x
qr(x, ...)
qr(x, y)
qr(x)
qr(x, tol=1e-07)
qr.coef(qr, y)
a <- matrix(c(1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1), nrow=10, ncol=10, byrow=TRUE)
a
det(a)
A <- matrix(c(2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2), nrow=4, ncol=4, byrow=T)
A
eigen(A)
eigen(x) = matrix(1, 0, 1, nrow=3)
# Luodaan vektori f, jonka jokainen komponentti on 0
f = rep(0,12);
plot(f, type="h")
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
ehti_osuus
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
hist(y)
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
n = 10**6
source('E:/Ladatut tiedostot/noppasumma.r')
n = 10^6
source('E:/Ladatut tiedostot/noppasumma.r')
y = (b-a)*x+a
source('E:/Ladatut tiedostot/noppasumma.r')
b = 20
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
source('E:/Ladatut tiedostot/noppasumma.r')
setwd("~/Coding/intro-to-ML")
library("reticulate")
rmarkdown::render
knitr::knit_engines$set(python = reticulate::eng_python)
#tinytex::install_tinytex()
reticulate::repl_python()
import pandas as pd
npf = pd.read_csv("npf_train.csv")
npf
quit
library("reticulate")
rmarkdown::render
knitr::knit_engines$set(python = reticulate::eng_python)
#tinytex::install_tinytex()
reticulate::repl_python()
import pandas as pd
npf = pd.read_csv("npf_train.csv")
npf
npf
npf
npf = npf.set_index("date")
npf = npf.drop("id",axis=1)
npf
npf.describe()
View(npf)
import matplotlib.pyplot as plt
import seaborn as sns
npf.describe()
npf = npf.drop("partlybad",axis=1)
sns.pairplot(npf,hue="class4",vars=npf.columns[1:6],kind="reg")
plt.show()
py_install(seaborn)
quit
library("reticulate")
rmarkdown::render
knitr::knit_engines$set(python = reticulate::eng_python)
#tinytex::install_tinytex()
py_install(seaborn)
conda_install(seaborn)
sns <- import('seaborn')
reticulate::repl_python()
import matplotlib.pyplot as plt
import seaborn as sns
npf.describe()
npf = npf.drop("partlybad",axis=1)
sns.pairplot(npf,hue="class4",vars=npf.columns[1:6],kind="reg")
plt.show()
import matplotlib.pyplot as plt
import seaborn as sns
npf.describe()
npf = npf.drop("partlybad",axis=1)
sns.pairplot(npf,hue="class4",vars=npf.columns[1:6],kind="reg")
plt.show()
sns.boxplot(x="class4",y="RHIRGA84.mean",data=npf)
plt.show()
import numpy as np
class2 = np.array(["nonevent", "event"])
npf["class2"] = class2[(npf["class4"]!="nonevent").astype(int)]
import numpy as np
class2 = np.array(["nonevent", "event"])
npf["class2"] = class2[(npf["class4"]!="nonevent").astype(int)]
sns.boxplot(x="class2", y="CS.mean", data=npf)
plt.show()
import numpy as np
class2 = np.array(["nonevent", "event"])
npf["class2"] = class2[(npf["class4"]!="nonevent").astype(int)]
npf.boxplot(column="CS.mean", by="class2")
plt.show()
import matplotlib.pyplot as plt
import seaborn as sns
npf.describe()
npf = npf.drop("partlybad",axis=1)
sns.pairplot(npf,hue="class4",vars=npf.columns[1:6],kind="reg")
plt.show()
npf.boxplot(column="RHIRGA84.mean",by="class4")
plt.show()
npf.histogram("class2")
plt.show()
np.histogram(npf)
plt.show()
np.histogram(npf["class2"])
plt.show()
plt.hist(npf["class2"])
plt.hist(npf)
plt.hist(npf)
plt.show()
plt.hist(npf["class2"])
plt.show()
plt.hist(npf, bins=10)
plt.show()
plt.hist(npf, bins=10)
plt.show()
plt.hist(npf, bins=10)
sns.histplot(npf)
sns.histplot(npf, x="class2")
sns.histplot(npf, x="class4")
sns.displot(npf, x="class4")
sns.displot(npf, x="class4")
plt.show()
sns.displot(npf, x="class2")
plt.show()
sns.displot(npf)
plt.show()
sns.displot(npf)
plt.show()
View(class2)
View(class2)
View(npf)
sns.displot(npf["class2"])
plt.show()
sns.displot(npf, x="class2")
plt.show()
sns.displot(npf, x="class4")
plt.show()
import matplotlib.pyplot as plt
import seaborn as sns
npf.describe()
npf = npf.drop("partlybad",axis=1)
sns.pairplot(npf,hue="class4",vars=npf.columns[1:6],kind="reg")
plt.show()
npf.boxplot(column="RHIRGA84.mean",by="class4")
plt.show()
View(npf)
sns.displot(npf, x="class4")
plt.show()
sns.displot(npf, x="class4")
plt.show()
sns.displot(npf, x="class2")
plt.show()
sns.displot(npf, x="class4")
plt.show()
sns.displot(npf, x="class2", y="class4")
plt.show()
sns.displot(npf, x="class4")
plt.show()
sns.displot(npf, x="class2")
plt.show()
